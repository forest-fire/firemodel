{"version":3,"file":"firemodel.min.js","sources":["../lib/model.js","../lib/decorators/property.js","../node_modules/reflect-metadata/Reflect.js","../lib/decorators/decorator.js","../lib/decorators/relationship.js","../lib/decorators/schema.js","../lib/base-schema.js","../lib/record.js","../lib/list.js","../node_modules/firebase-key/dist/esm5/key-milliseconds.js","../node_modules/firebase-key/dist/esm5/text-repeat.js","../node_modules/firebase-key/dist/esm5/key-key.js","../node_modules/firebase-key/dist/esm5/key-date.js","../node_modules/firebase-key/dist/esm5/key-decode.js","../node_modules/firebase-key/dist/esm5/key-decode-lexicographic.js","../node_modules/firebase-key/dist/esm5/key-decrement.js","../node_modules/firebase-key/dist/esm5/key-encode.js","../node_modules/firebase-key/dist/esm5/key-encode-lexicographic.js","../node_modules/firebase-key/dist/esm5/key-increment.js","../node_modules/firebase-key/dist/esm5/text-random-string.js","../lib/index.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common_types_1 = require(\"common-types\");\nconst VerboseError_1 = require(\"./VerboseError\");\nconst index_1 = require(\"./index\");\nconst pluralize = require(\"pluralize\");\nconst camelCase = require(\"lodash.camelcase\");\nconst serialized_query_1 = require(\"serialized-query\");\nconst util_1 = require(\"./util\");\nconst firebase_key_1 = require(\"firebase-key\");\nexports.baseLogger = {\n    log: (message) => console.log(`${this.modelName}/${this._key}: ${message}`),\n    warn: (message) => console.warn(`${this.modelName}/${this._key}: ${message}`),\n    debug: (message) => {\n        const stage = process.env.STAGE || process.env.AWS_STAGE || process.env.ENV;\n        if (stage !== \"prod\") {\n            console.log(`${this.modelName}/${this._key}: ${message}`);\n        }\n    },\n    error: (message) => console.error(`${this.modelName}/${this._key}: ${message}`)\n};\nclass Model {\n    //#endregion\n    constructor(_schemaClass, db, logger) {\n        this._schemaClass = _schemaClass;\n        // tslint:disable-next-line:member-ordering\n        this._mockGenerator = h => () => {\n            return this._bespokeMockGenerator\n                ? Object.assign({}, this._defaultGenerator(h)(), this._bespokeMockGenerator(h)()) : this._defaultGenerator(h)();\n        };\n        this._defaultGenerator = h => () => ({\n            createdAt: new Date(h.faker.date.past()).toISOString(),\n            lastUpdated: new Date().toISOString()\n        });\n        this._db = db;\n        if (!Model.defaultDb) {\n            Model.defaultDb = db;\n        }\n        this.logger = logger ? logger : exports.baseLogger;\n        this._schema = new this.schemaClass();\n    }\n    static create(schema, options = {}) {\n        const db = options.db || Model.defaultDb;\n        const logger = options.logger || exports.baseLogger;\n        const model = new Model(schema, db, logger);\n        return model;\n    }\n    /** the singular name of the model */\n    get modelName() {\n        return camelCase(this._schema.constructor.name);\n    }\n    get pluralName() {\n        return this._pluralName ? this._pluralName : pluralize.plural(this.modelName);\n    }\n    set pluralName(name) {\n        this._pluralName = name;\n    }\n    set mockGenerator(cb) {\n        this._bespokeMockGenerator = cb;\n    }\n    //#region PUBLIC API\n    get schemaClass() {\n        return this._schemaClass;\n    }\n    /** Database access */\n    get db() {\n        return this._db;\n    }\n    get schema() {\n        return this._schema;\n    }\n    get dbPath() {\n        return [this._schema.META.dbOffset, this.pluralName].join(\".\");\n    }\n    get localPath() {\n        return [this._schema.META.localOffset, this.pluralName].join(\".\");\n    }\n    get relationships() {\n        return this._schema.META.relationships;\n    }\n    get properties() {\n        return this._schema.META.properties;\n    }\n    get pushKeys() {\n        return this._schema.META ? this._schema.META.pushKeys : [];\n    }\n    // /**\n    //  * Add a new record of type T, optionally including the payload\n    //  *\n    //  * @param hash the values that you want this new object to be initialized as; note that if you include an \"id\" property it will assume this is from the DB, if you don't then it will immediately add it and create an id.\n    //  */\n    // public async newRecord(hash?: Partial<T>) {\n    //   console.log(this.schemaClass);\n    //   return hash\n    //     ? Record.add(this.schemaClass, hash as T, { db: this.db })\n    //     : Record.create(this.schemaClass, { db: this.db });\n    // }\n    /**\n     * Get an existing record from the  DB and return as a Record\n     *\n     * @param id the primary key for the record\n     */\n    getRecord(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const record = yield index_1.Record.get(this._schemaClass, id);\n            return record;\n        });\n    }\n    /**\n     * Returns a list of ALL objects of the given schema type\n     */\n    getAll(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const list = new index_1.List(this);\n            return query ? list.load(query) : list.load(this.dbPath);\n        });\n    }\n    /**\n     * Finds a single records within a list\n     *\n     * @param prop the property on the Schema which you are looking for a value in\n     * @param value the value you are looking for the property to equal; alternatively you can pass a tuple with a comparison operation and a value\n     */\n    findRecord(prop, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const query = this._findBuilder(prop, value, true);\n            const results = yield this.db.getList(query);\n            if (results.length > 0) {\n                const first = results.pop();\n                const record = index_1.Record.get(this._schemaClass, first.id);\n                return record;\n            }\n            else {\n                throw common_types_1.createError(\"not-found\", `Not Found: didn't find any \"${this.pluralName}\" which had \"${prop}\" set to \"${value}\"; note the path in the database which was searched was \"${this.dbPath}\".`);\n            }\n        });\n    }\n    findAll(prop, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const query = this._findBuilder(prop, value);\n            let results;\n            try {\n                results = yield this.db.getList(query);\n            }\n            catch (e) {\n                console.log(\"Error attempting to findAll() in Model.\", e);\n                throw common_types_1.createError(\"model/findAll\", `\\nFailed getting via getList() with query` + JSON.stringify(query, null, 2), e);\n            }\n            return new index_1.List(this, results);\n        });\n    }\n    /** sets a record to the database */\n    set(record, auditInfo = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!record.id) {\n                throw common_types_1.createError(\"set/no-id\", `Attempt to set \"${this.dbPath}\" in database but record had no \"id\" property.`);\n            }\n            const now = this.now();\n            record = Object.assign({}, record, { lastUpdated: now });\n            auditInfo = Object.assign({}, auditInfo, { properties: Object.keys(record) });\n            const ref = yield this.crud(\"set\", now, util_1.slashNotation(this.dbPath, record.id), record, auditInfo);\n            return ref;\n        });\n    }\n    /** Push a new record onto a model's list using Firebase a push-ID */\n    push(newRecord, auditInfo = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const now = this.now();\n            const id = firebase_key_1.key();\n            newRecord = Object.assign({}, newRecord, { lastUpdated: now, createdAt: now });\n            auditInfo = Object.assign({}, auditInfo, { properties: Object.keys(newRecord) });\n            const ref = yield this.crud(\"push\", now, util_1.slashNotation(this.dbPath, id), newRecord, auditInfo);\n            return index_1.Record.get(this._schemaClass, id);\n        });\n    }\n    update(key, updates, auditInfo = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const now = this.now();\n            auditInfo = Object.assign({ auditInfo }, { updatedProperties: Object.keys(updates) });\n            updates = Object.assign({}, updates, { lastUpdated: now });\n            yield this.crud(\"update\", now, util_1.slashNotation(this.dbPath, key), updates, auditInfo);\n        });\n    }\n    /**\n     * Remove\n     *\n     * Remove a record from the database\n     *\n     * @param key         the specific record id (but can alternatively be the full path if it matches dbPath)\n     * @param returnValue optionally pass back the deleted record along removing from server\n     * @param auditInfo   any additional information to be passed to the audit record (if Model has turned on)\n     */\n    remove(key, returnValue = false, auditInfo = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!key) {\n                const e = new Error(`Trying to call remove(id) on a ${this.modelName} Model class can not be done when ID is undefined!`);\n                e.name = \"NotAllowed\";\n                throw e;\n            }\n            const now = this.now();\n            let value;\n            if (returnValue) {\n                value = yield this._db.getValue(util_1.slashNotation(this.dbPath, key));\n            }\n            yield this.crud(\"remove\", now, key.match(this.dbPath) ? key : util_1.slashNotation(this.dbPath, key), null, auditInfo);\n            return returnValue ? value : undefined;\n        });\n    }\n    getAuditTrail(filter = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { since, last } = filter;\n            const path = `${Model.auditBase}/${this.pluralName}`;\n            let query = serialized_query_1.SerializedQuery.path(path);\n            if (since) {\n                const startAt = new Date(since).toISOString();\n                query = query.orderByChild(\"when\").startAt(startAt);\n            }\n            if (last) {\n                query = query.limitToLast(last);\n            }\n            return this.db.getList(query);\n        });\n    }\n    //#endregion\n    //#region PRIVATE API\n    audit(crud, when, key, info) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = util_1.slashNotation(Model.auditBase, this.pluralName);\n            return this.db.push(path, {\n                crud,\n                when,\n                key,\n                info\n            });\n        });\n    }\n    /**\n     * crud\n     *\n     * Standardized processing of all CRUD operations\n     *\n     * @param op The CRUD operation being performed\n     * @param key The record id which is being performed on\n     * @param value The new-value parameter (meaning varies on context)\n     * @param auditInfo the meta-fields for the audit trail\n     */\n    crud(op, when, key, value, auditInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const isAuditable = this._schema.META.audit;\n            const auditPath = util_1.slashNotation(Model.auditBase, this.pluralName, key);\n            let auditRef;\n            if (isAuditable) {\n                console.log(\"auditing: \", op);\n                auditRef = yield this.audit(op, when, key, auditInfo);\n            }\n            switch (op) {\n                case \"set\":\n                    return this.db.set(key, value);\n                case \"update\":\n                    return this.db.update(key, value);\n                case \"push\":\n                    // PUSH unlike SET returns a reference to the newly created record\n                    return this.db.set(key, value).then(() => this.db.ref(key));\n                case \"remove\":\n                    return this.db.remove(key);\n                default:\n                    throw new VerboseError_1.VerboseError({\n                        code: \"unknown-operation\",\n                        message: `The operation \"${op}\" is not known!`,\n                        module: \"crud\"\n                    });\n            }\n        });\n    }\n    _findBuilder(child, value, singular = false) {\n        let operation = \"=\";\n        if (value instanceof Array) {\n            operation = value[0];\n            value = value[1];\n        }\n        let query = serialized_query_1.SerializedQuery.path(this.dbPath).orderByChild(child);\n        if (singular) {\n            query = query.limitToFirst(1);\n        }\n        switch (operation) {\n            case \"=\":\n                return query.equalTo(value);\n            case \">\":\n                return query.startAt(value);\n            case \"<\":\n                return query.endAt(value);\n            default:\n                throw new VerboseError_1.VerboseError({\n                    code: \"invalid-operation\",\n                    message: `Invalid comparison operater \"${operation}\" used in find query`,\n                    module: \"findXXX\"\n                });\n        }\n    }\n    //#region mocking\n    // tslint:disable-next-line:member-ordering\n    generate(quantity, override = {}) {\n        this.db.mock.queueSchema(this.modelName, quantity, override);\n        this.db.mock.generate();\n    }\n    //#endregion\n    now() {\n        return Date.now();\n    }\n}\n//#region PROPERTIES\nModel.defaultDb = null;\n/** The base path in the database to store audit logs */\nModel.auditBase = \"logging/audit_logs\";\nexports.default = Model;\n//# sourceMappingURL=model.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"reflect-metadata\");\nconst decorator_1 = require(\"./decorator\");\nfunction constrainedProperty(options = {}) {\n    return decorator_1.propertyDecorator(Object.assign({}, options, { isRelationship: false, isProperty: true }), \"property\");\n}\nexports.constrainedProperty = constrainedProperty;\n/** allows the introduction of a new constraint to the metadata of a property */\nfunction constrain(prop, value) {\n    return decorator_1.propertyDecorator({ [prop]: value });\n}\nexports.constrain = constrain;\nfunction desc(value) {\n    return decorator_1.propertyDecorator({ desc: value });\n}\nexports.desc = desc;\nfunction min(value) {\n    return decorator_1.propertyDecorator({ min: value });\n}\nexports.min = min;\nfunction max(value) {\n    return decorator_1.propertyDecorator({ max: value });\n}\nexports.max = max;\nfunction length(value) {\n    return decorator_1.propertyDecorator({ length: value });\n}\nexports.length = length;\nexports.property = decorator_1.propertyDecorator({\n    isRelationship: false,\n    isProperty: true\n}, \"property\");\nexports.pushKey = decorator_1.propertyDecorator({\n    pushKey: true\n}, \"property\");\n//# sourceMappingURL=property.js.map","/*! *****************************************************************************\r\nCopyright (C) Microsoft. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\nvar Reflect;\r\n(function (Reflect) {\r\n    // Metadata Proposal\r\n    // https://rbuckton.github.io/reflect-metadata/\r\n    (function (factory) {\r\n        var root = typeof global === \"object\" ? global :\r\n            typeof self === \"object\" ? self :\r\n                typeof this === \"object\" ? this :\r\n                    Function(\"return this;\")();\r\n        var exporter = makeExporter(Reflect);\r\n        if (typeof root.Reflect === \"undefined\") {\r\n            root.Reflect = Reflect;\r\n        }\r\n        else {\r\n            exporter = makeExporter(root.Reflect, exporter);\r\n        }\r\n        factory(exporter);\r\n        function makeExporter(target, previous) {\r\n            return function (key, value) {\r\n                if (typeof target[key] !== \"function\") {\r\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\r\n                }\r\n                if (previous)\r\n                    previous(key, value);\r\n            };\r\n        }\r\n    })(function (exporter) {\r\n        var hasOwn = Object.prototype.hasOwnProperty;\r\n        // feature test for Symbol support\r\n        var supportsSymbol = typeof Symbol === \"function\";\r\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\r\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\r\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\r\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\r\n        var downLevel = !supportsCreate && !supportsProto;\r\n        var HashMap = {\r\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\r\n            create: supportsCreate\r\n                ? function () { return MakeDictionary(Object.create(null)); }\r\n                : supportsProto\r\n                    ? function () { return MakeDictionary({ __proto__: null }); }\r\n                    : function () { return MakeDictionary({}); },\r\n            has: downLevel\r\n                ? function (map, key) { return hasOwn.call(map, key); }\r\n                : function (map, key) { return key in map; },\r\n            get: downLevel\r\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\r\n                : function (map, key) { return map[key]; },\r\n        };\r\n        // Load global or shim versions of Map, Set, and WeakMap\r\n        var functionPrototype = Object.getPrototypeOf(Function);\r\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\r\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\r\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\r\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\r\n        // [[Metadata]] internal slot\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\r\n        var Metadata = new _WeakMap();\r\n        /**\r\n         * Applies a set of decorators to a property of a target object.\r\n         * @param decorators An array of decorators.\r\n         * @param target The target object.\r\n         * @param propertyKey (Optional) The property key to decorate.\r\n         * @param attributes (Optional) The property descriptor for the target key.\r\n         * @remarks Decorators are applied in reverse order.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     Example = Reflect.decorate(decoratorsArray, Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     Object.defineProperty(Example, \"staticMethod\",\r\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n         *\r\n         *     // method (on prototype)\r\n         *     Object.defineProperty(Example.prototype, \"method\",\r\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n         *\r\n         */\r\n        function decorate(decorators, target, propertyKey, attributes) {\r\n            if (!IsUndefined(propertyKey)) {\r\n                if (!IsArray(decorators))\r\n                    throw new TypeError();\r\n                if (!IsObject(target))\r\n                    throw new TypeError();\r\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\r\n                    throw new TypeError();\r\n                if (IsNull(attributes))\r\n                    attributes = undefined;\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n                return DecorateProperty(decorators, target, propertyKey, attributes);\r\n            }\r\n            else {\r\n                if (!IsArray(decorators))\r\n                    throw new TypeError();\r\n                if (!IsConstructor(target))\r\n                    throw new TypeError();\r\n                return DecorateConstructor(decorators, target);\r\n            }\r\n        }\r\n        exporter(\"decorate\", decorate);\r\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\r\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\r\n        /**\r\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\r\n         * @param metadataKey The key for the metadata entry.\r\n         * @param metadataValue The value for the metadata entry.\r\n         * @returns A decorator function.\r\n         * @remarks\r\n         * If `metadataKey` is already defined for the target and target key, the\r\n         * metadataValue for that key will be overwritten.\r\n         * @example\r\n         *\r\n         *     // constructor\r\n         *     @Reflect.metadata(key, value)\r\n         *     class Example {\r\n         *     }\r\n         *\r\n         *     // property (on constructor, TypeScript only)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         static staticProperty;\r\n         *     }\r\n         *\r\n         *     // property (on prototype, TypeScript only)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         property;\r\n         *     }\r\n         *\r\n         *     // method (on constructor)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         static staticMethod() { }\r\n         *     }\r\n         *\r\n         *     // method (on prototype)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         method() { }\r\n         *     }\r\n         *\r\n         */\r\n        function metadata(metadataKey, metadataValue) {\r\n            function decorator(target, propertyKey) {\r\n                if (!IsObject(target))\r\n                    throw new TypeError();\r\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\r\n                    throw new TypeError();\r\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n            }\r\n            return decorator;\r\n        }\r\n        exporter(\"metadata\", metadata);\r\n        /**\r\n         * Define a unique metadata entry on the target.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param metadataValue A value that contains attached metadata.\r\n         * @param target The target object on which to define metadata.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\r\n         *\r\n         *     // decorator factory as metadata-producing annotation.\r\n         *     function MyAnnotation(options): Decorator {\r\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n         *     }\r\n         *\r\n         */\r\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n        }\r\n        exporter(\"defineMetadata\", defineMetadata);\r\n        /**\r\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function hasMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"hasMetadata\", hasMetadata);\r\n        /**\r\n         * Gets a value indicating whether the target object has the provided metadata key defined.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\r\n        /**\r\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"getMetadata\", getMetadata);\r\n        /**\r\n         * Gets the metadata value for the provided metadata key on the target object.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getOwnMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"getOwnMetadata\", getOwnMetadata);\r\n        /**\r\n         * Gets the metadata keys defined on the target object or its prototype chain.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns An array of unique metadata keys.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getMetadataKeys(Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getMetadataKeys(target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryMetadataKeys(target, propertyKey);\r\n        }\r\n        exporter(\"getMetadataKeys\", getMetadataKeys);\r\n        /**\r\n         * Gets the unique metadata keys defined on the target object.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns An array of unique metadata keys.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getOwnMetadataKeys(Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getOwnMetadataKeys(target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\r\n        }\r\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\r\n        /**\r\n         * Deletes the metadata entry from the target object with the provided key.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function deleteMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return false;\r\n            if (!metadataMap.delete(metadataKey))\r\n                return false;\r\n            if (metadataMap.size > 0)\r\n                return true;\r\n            var targetMetadata = Metadata.get(target);\r\n            targetMetadata.delete(propertyKey);\r\n            if (targetMetadata.size > 0)\r\n                return true;\r\n            Metadata.delete(target);\r\n            return true;\r\n        }\r\n        exporter(\"deleteMetadata\", deleteMetadata);\r\n        function DecorateConstructor(decorators, target) {\r\n            for (var i = decorators.length - 1; i >= 0; --i) {\r\n                var decorator = decorators[i];\r\n                var decorated = decorator(target);\r\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                    if (!IsConstructor(decorated))\r\n                        throw new TypeError();\r\n                    target = decorated;\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\r\n            for (var i = decorators.length - 1; i >= 0; --i) {\r\n                var decorator = decorators[i];\r\n                var decorated = decorator(target, propertyKey, descriptor);\r\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                    if (!IsObject(decorated))\r\n                        throw new TypeError();\r\n                    descriptor = decorated;\r\n                }\r\n            }\r\n            return descriptor;\r\n        }\r\n        function GetOrCreateMetadataMap(O, P, Create) {\r\n            var targetMetadata = Metadata.get(O);\r\n            if (IsUndefined(targetMetadata)) {\r\n                if (!Create)\r\n                    return undefined;\r\n                targetMetadata = new _Map();\r\n                Metadata.set(O, targetMetadata);\r\n            }\r\n            var metadataMap = targetMetadata.get(P);\r\n            if (IsUndefined(metadataMap)) {\r\n                if (!Create)\r\n                    return undefined;\r\n                metadataMap = new _Map();\r\n                targetMetadata.set(P, metadataMap);\r\n            }\r\n            return metadataMap;\r\n        }\r\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\r\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\r\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n            if (hasOwn)\r\n                return true;\r\n            var parent = OrdinaryGetPrototypeOf(O);\r\n            if (!IsNull(parent))\r\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\r\n            return false;\r\n        }\r\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\r\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return false;\r\n            return ToBoolean(metadataMap.has(MetadataKey));\r\n        }\r\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\r\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\r\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n            if (hasOwn)\r\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\r\n            var parent = OrdinaryGetPrototypeOf(O);\r\n            if (!IsNull(parent))\r\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\r\n            return undefined;\r\n        }\r\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\r\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return undefined;\r\n            return metadataMap.get(MetadataKey);\r\n        }\r\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\r\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\r\n            metadataMap.set(MetadataKey, MetadataValue);\r\n        }\r\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\r\n        function OrdinaryMetadataKeys(O, P) {\r\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\r\n            var parent = OrdinaryGetPrototypeOf(O);\r\n            if (parent === null)\r\n                return ownKeys;\r\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\r\n            if (parentKeys.length <= 0)\r\n                return ownKeys;\r\n            if (ownKeys.length <= 0)\r\n                return parentKeys;\r\n            var set = new _Set();\r\n            var keys = [];\r\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\r\n                var key = ownKeys_1[_i];\r\n                var hasKey = set.has(key);\r\n                if (!hasKey) {\r\n                    set.add(key);\r\n                    keys.push(key);\r\n                }\r\n            }\r\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\r\n                var key = parentKeys_1[_a];\r\n                var hasKey = set.has(key);\r\n                if (!hasKey) {\r\n                    set.add(key);\r\n                    keys.push(key);\r\n                }\r\n            }\r\n            return keys;\r\n        }\r\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\r\n        function OrdinaryOwnMetadataKeys(O, P) {\r\n            var keys = [];\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return keys;\r\n            var keysObj = metadataMap.keys();\r\n            var iterator = GetIterator(keysObj);\r\n            var k = 0;\r\n            while (true) {\r\n                var next = IteratorStep(iterator);\r\n                if (!next) {\r\n                    keys.length = k;\r\n                    return keys;\r\n                }\r\n                var nextValue = IteratorValue(next);\r\n                try {\r\n                    keys[k] = nextValue;\r\n                }\r\n                catch (e) {\r\n                    try {\r\n                        IteratorClose(iterator);\r\n                    }\r\n                    finally {\r\n                        throw e;\r\n                    }\r\n                }\r\n                k++;\r\n            }\r\n        }\r\n        // 6 ECMAScript Data Typ0es and Values\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\r\n        function Type(x) {\r\n            if (x === null)\r\n                return 1 /* Null */;\r\n            switch (typeof x) {\r\n                case \"undefined\": return 0 /* Undefined */;\r\n                case \"boolean\": return 2 /* Boolean */;\r\n                case \"string\": return 3 /* String */;\r\n                case \"symbol\": return 4 /* Symbol */;\r\n                case \"number\": return 5 /* Number */;\r\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\r\n                default: return 6 /* Object */;\r\n            }\r\n        }\r\n        // 6.1.1 The Undefined Type\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\r\n        function IsUndefined(x) {\r\n            return x === undefined;\r\n        }\r\n        // 6.1.2 The Null Type\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\r\n        function IsNull(x) {\r\n            return x === null;\r\n        }\r\n        // 6.1.5 The Symbol Type\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\r\n        function IsSymbol(x) {\r\n            return typeof x === \"symbol\";\r\n        }\r\n        // 6.1.7 The Object Type\r\n        // https://tc39.github.io/ecma262/#sec-object-type\r\n        function IsObject(x) {\r\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\r\n        }\r\n        // 7.1 Type Conversion\r\n        // https://tc39.github.io/ecma262/#sec-type-conversion\r\n        // 7.1.1 ToPrimitive(input [, PreferredType])\r\n        // https://tc39.github.io/ecma262/#sec-toprimitive\r\n        function ToPrimitive(input, PreferredType) {\r\n            switch (Type(input)) {\r\n                case 0 /* Undefined */: return input;\r\n                case 1 /* Null */: return input;\r\n                case 2 /* Boolean */: return input;\r\n                case 3 /* String */: return input;\r\n                case 4 /* Symbol */: return input;\r\n                case 5 /* Number */: return input;\r\n            }\r\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\r\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\r\n            if (exoticToPrim !== undefined) {\r\n                var result = exoticToPrim.call(input, hint);\r\n                if (IsObject(result))\r\n                    throw new TypeError();\r\n                return result;\r\n            }\r\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\r\n        }\r\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\r\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\r\n        function OrdinaryToPrimitive(O, hint) {\r\n            if (hint === \"string\") {\r\n                var toString_1 = O.toString;\r\n                if (IsCallable(toString_1)) {\r\n                    var result = toString_1.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n                var valueOf = O.valueOf;\r\n                if (IsCallable(valueOf)) {\r\n                    var result = valueOf.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n            }\r\n            else {\r\n                var valueOf = O.valueOf;\r\n                if (IsCallable(valueOf)) {\r\n                    var result = valueOf.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n                var toString_2 = O.toString;\r\n                if (IsCallable(toString_2)) {\r\n                    var result = toString_2.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n            }\r\n            throw new TypeError();\r\n        }\r\n        // 7.1.2 ToBoolean(argument)\r\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\r\n        function ToBoolean(argument) {\r\n            return !!argument;\r\n        }\r\n        // 7.1.12 ToString(argument)\r\n        // https://tc39.github.io/ecma262/#sec-tostring\r\n        function ToString(argument) {\r\n            return \"\" + argument;\r\n        }\r\n        // 7.1.14 ToPropertyKey(argument)\r\n        // https://tc39.github.io/ecma262/#sec-topropertykey\r\n        function ToPropertyKey(argument) {\r\n            var key = ToPrimitive(argument, 3 /* String */);\r\n            if (IsSymbol(key))\r\n                return key;\r\n            return ToString(key);\r\n        }\r\n        // 7.2 Testing and Comparison Operations\r\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\r\n        // 7.2.2 IsArray(argument)\r\n        // https://tc39.github.io/ecma262/#sec-isarray\r\n        function IsArray(argument) {\r\n            return Array.isArray\r\n                ? Array.isArray(argument)\r\n                : argument instanceof Object\r\n                    ? argument instanceof Array\r\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\r\n        }\r\n        // 7.2.3 IsCallable(argument)\r\n        // https://tc39.github.io/ecma262/#sec-iscallable\r\n        function IsCallable(argument) {\r\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\r\n            return typeof argument === \"function\";\r\n        }\r\n        // 7.2.4 IsConstructor(argument)\r\n        // https://tc39.github.io/ecma262/#sec-isconstructor\r\n        function IsConstructor(argument) {\r\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\r\n            return typeof argument === \"function\";\r\n        }\r\n        // 7.2.7 IsPropertyKey(argument)\r\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\r\n        function IsPropertyKey(argument) {\r\n            switch (Type(argument)) {\r\n                case 3 /* String */: return true;\r\n                case 4 /* Symbol */: return true;\r\n                default: return false;\r\n            }\r\n        }\r\n        // 7.3 Operations on Objects\r\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\r\n        // 7.3.9 GetMethod(V, P)\r\n        // https://tc39.github.io/ecma262/#sec-getmethod\r\n        function GetMethod(V, P) {\r\n            var func = V[P];\r\n            if (func === undefined || func === null)\r\n                return undefined;\r\n            if (!IsCallable(func))\r\n                throw new TypeError();\r\n            return func;\r\n        }\r\n        // 7.4 Operations on Iterator Objects\r\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\r\n        function GetIterator(obj) {\r\n            var method = GetMethod(obj, iteratorSymbol);\r\n            if (!IsCallable(method))\r\n                throw new TypeError(); // from Call\r\n            var iterator = method.call(obj);\r\n            if (!IsObject(iterator))\r\n                throw new TypeError();\r\n            return iterator;\r\n        }\r\n        // 7.4.4 IteratorValue(iterResult)\r\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\r\n        function IteratorValue(iterResult) {\r\n            return iterResult.value;\r\n        }\r\n        // 7.4.5 IteratorStep(iterator)\r\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\r\n        function IteratorStep(iterator) {\r\n            var result = iterator.next();\r\n            return result.done ? false : result;\r\n        }\r\n        // 7.4.6 IteratorClose(iterator, completion)\r\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\r\n        function IteratorClose(iterator) {\r\n            var f = iterator[\"return\"];\r\n            if (f)\r\n                f.call(iterator);\r\n        }\r\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\r\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\r\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\r\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\r\n        function OrdinaryGetPrototypeOf(O) {\r\n            var proto = Object.getPrototypeOf(O);\r\n            if (typeof O !== \"function\" || O === functionPrototype)\r\n                return proto;\r\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\r\n            // Try to determine the superclass constructor. Compatible implementations\r\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\r\n            // or ensure each class has a valid `constructor` property on its prototype that\r\n            // points back to the constructor.\r\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\r\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\r\n            if (proto !== functionPrototype)\r\n                return proto;\r\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\r\n            var prototype = O.prototype;\r\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\r\n            if (prototypeProto == null || prototypeProto === Object.prototype)\r\n                return proto;\r\n            // If the constructor was not a function, then we cannot determine the heritage.\r\n            var constructor = prototypeProto.constructor;\r\n            if (typeof constructor !== \"function\")\r\n                return proto;\r\n            // If we have some kind of self-reference, then we cannot determine the heritage.\r\n            if (constructor === O)\r\n                return proto;\r\n            // we have a pretty good guess at the heritage.\r\n            return constructor;\r\n        }\r\n        // naive Map shim\r\n        function CreateMapPolyfill() {\r\n            var cacheSentinel = {};\r\n            var arraySentinel = [];\r\n            var MapIterator = (function () {\r\n                function MapIterator(keys, values, selector) {\r\n                    this._index = 0;\r\n                    this._keys = keys;\r\n                    this._values = values;\r\n                    this._selector = selector;\r\n                }\r\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\r\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\r\n                MapIterator.prototype.next = function () {\r\n                    var index = this._index;\r\n                    if (index >= 0 && index < this._keys.length) {\r\n                        var result = this._selector(this._keys[index], this._values[index]);\r\n                        if (index + 1 >= this._keys.length) {\r\n                            this._index = -1;\r\n                            this._keys = arraySentinel;\r\n                            this._values = arraySentinel;\r\n                        }\r\n                        else {\r\n                            this._index++;\r\n                        }\r\n                        return { value: result, done: false };\r\n                    }\r\n                    return { value: undefined, done: true };\r\n                };\r\n                MapIterator.prototype.throw = function (error) {\r\n                    if (this._index >= 0) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    throw error;\r\n                };\r\n                MapIterator.prototype.return = function (value) {\r\n                    if (this._index >= 0) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    return { value: value, done: true };\r\n                };\r\n                return MapIterator;\r\n            }());\r\n            return (function () {\r\n                function Map() {\r\n                    this._keys = [];\r\n                    this._values = [];\r\n                    this._cacheKey = cacheSentinel;\r\n                    this._cacheIndex = -2;\r\n                }\r\n                Object.defineProperty(Map.prototype, \"size\", {\r\n                    get: function () { return this._keys.length; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\r\n                Map.prototype.get = function (key) {\r\n                    var index = this._find(key, /*insert*/ false);\r\n                    return index >= 0 ? this._values[index] : undefined;\r\n                };\r\n                Map.prototype.set = function (key, value) {\r\n                    var index = this._find(key, /*insert*/ true);\r\n                    this._values[index] = value;\r\n                    return this;\r\n                };\r\n                Map.prototype.delete = function (key) {\r\n                    var index = this._find(key, /*insert*/ false);\r\n                    if (index >= 0) {\r\n                        var size = this._keys.length;\r\n                        for (var i = index + 1; i < size; i++) {\r\n                            this._keys[i - 1] = this._keys[i];\r\n                            this._values[i - 1] = this._values[i];\r\n                        }\r\n                        this._keys.length--;\r\n                        this._values.length--;\r\n                        if (key === this._cacheKey) {\r\n                            this._cacheKey = cacheSentinel;\r\n                            this._cacheIndex = -2;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n                Map.prototype.clear = function () {\r\n                    this._keys.length = 0;\r\n                    this._values.length = 0;\r\n                    this._cacheKey = cacheSentinel;\r\n                    this._cacheIndex = -2;\r\n                };\r\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\r\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\r\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\r\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\r\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\r\n                Map.prototype._find = function (key, insert) {\r\n                    if (this._cacheKey !== key) {\r\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\r\n                    }\r\n                    if (this._cacheIndex < 0 && insert) {\r\n                        this._cacheIndex = this._keys.length;\r\n                        this._keys.push(key);\r\n                        this._values.push(undefined);\r\n                    }\r\n                    return this._cacheIndex;\r\n                };\r\n                return Map;\r\n            }());\r\n            function getKey(key, _) {\r\n                return key;\r\n            }\r\n            function getValue(_, value) {\r\n                return value;\r\n            }\r\n            function getEntry(key, value) {\r\n                return [key, value];\r\n            }\r\n        }\r\n        // naive Set shim\r\n        function CreateSetPolyfill() {\r\n            return (function () {\r\n                function Set() {\r\n                    this._map = new _Map();\r\n                }\r\n                Object.defineProperty(Set.prototype, \"size\", {\r\n                    get: function () { return this._map.size; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                Set.prototype.has = function (value) { return this._map.has(value); };\r\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\r\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\r\n                Set.prototype.clear = function () { this._map.clear(); };\r\n                Set.prototype.keys = function () { return this._map.keys(); };\r\n                Set.prototype.values = function () { return this._map.values(); };\r\n                Set.prototype.entries = function () { return this._map.entries(); };\r\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\r\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\r\n                return Set;\r\n            }());\r\n        }\r\n        // naive WeakMap shim\r\n        function CreateWeakMapPolyfill() {\r\n            var UUID_SIZE = 16;\r\n            var keys = HashMap.create();\r\n            var rootKey = CreateUniqueKey();\r\n            return (function () {\r\n                function WeakMap() {\r\n                    this._key = CreateUniqueKey();\r\n                }\r\n                WeakMap.prototype.has = function (target) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\r\n                };\r\n                WeakMap.prototype.get = function (target) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\r\n                };\r\n                WeakMap.prototype.set = function (target, value) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\r\n                    table[this._key] = value;\r\n                    return this;\r\n                };\r\n                WeakMap.prototype.delete = function (target) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                    return table !== undefined ? delete table[this._key] : false;\r\n                };\r\n                WeakMap.prototype.clear = function () {\r\n                    // NOTE: not a real clear, just makes the previous data unreachable\r\n                    this._key = CreateUniqueKey();\r\n                };\r\n                return WeakMap;\r\n            }());\r\n            function CreateUniqueKey() {\r\n                var key;\r\n                do\r\n                    key = \"@@WeakMap@@\" + CreateUUID();\r\n                while (HashMap.has(keys, key));\r\n                keys[key] = true;\r\n                return key;\r\n            }\r\n            function GetOrCreateWeakMapTable(target, create) {\r\n                if (!hasOwn.call(target, rootKey)) {\r\n                    if (!create)\r\n                        return undefined;\r\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\r\n                }\r\n                return target[rootKey];\r\n            }\r\n            function FillRandomBytes(buffer, size) {\r\n                for (var i = 0; i < size; ++i)\r\n                    buffer[i] = Math.random() * 0xff | 0;\r\n                return buffer;\r\n            }\r\n            function GenRandomBytes(size) {\r\n                if (typeof Uint8Array === \"function\") {\r\n                    if (typeof crypto !== \"undefined\")\r\n                        return crypto.getRandomValues(new Uint8Array(size));\r\n                    if (typeof msCrypto !== \"undefined\")\r\n                        return msCrypto.getRandomValues(new Uint8Array(size));\r\n                    return FillRandomBytes(new Uint8Array(size), size);\r\n                }\r\n                return FillRandomBytes(new Array(size), size);\r\n            }\r\n            function CreateUUID() {\r\n                var data = GenRandomBytes(UUID_SIZE);\r\n                // mark as random - RFC 4122 § 4.4\r\n                data[6] = data[6] & 0x4f | 0x40;\r\n                data[8] = data[8] & 0xbf | 0x80;\r\n                var result = \"\";\r\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\r\n                    var byte = data[offset];\r\n                    if (offset === 4 || offset === 6 || offset === 8)\r\n                        result += \"-\";\r\n                    if (byte < 16)\r\n                        result += \"0\";\r\n                    result += byte.toString(16).toLowerCase();\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\r\n        function MakeDictionary(obj) {\r\n            obj.__ = undefined;\r\n            delete obj.__;\r\n            return obj;\r\n        }\r\n    });\r\n})(Reflect || (Reflect = {}));\r\n//# sourceMappingURL=Reflect.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"reflect-metadata\");\nconst set = require(\"lodash.set\");\nconst get = require(\"lodash.get\");\nfunction push(target, path, value) {\n    if (Array.isArray(get(target, path))) {\n        get(target, path).push(value);\n    }\n    else {\n        set(target, path, [value]);\n    }\n}\n/** Properties accumlated by propertyDecorators and grouped by schema */\nconst propertiesBySchema = {};\n/** Relationships accumlated by propertyDecorators and grouped by schema */\nconst relationshipsBySchema = {};\nexports.propertyDecorator = (nameValuePairs = {}, \n/**\n * if you want to set the property being decorated's name\n * as property on meta specify the meta properties name here\n */\nproperty) => (target, key) => {\n    const reflect = Reflect.getMetadata(\"design:type\", target, key);\n    const meta = Object.assign({}, Reflect.getMetadata(key, target), { type: reflect.name }, nameValuePairs);\n    Reflect.defineMetadata(key, meta, target);\n    const _val = this[key];\n    if (nameValuePairs.isProperty) {\n        if (property) {\n            push(propertiesBySchema, target.constructor.name, Object.assign({}, meta, { [property]: key }));\n        }\n        else {\n            push(propertiesBySchema, target.constructor.name, meta);\n        }\n    }\n    if (nameValuePairs.isRelationship) {\n        if (property) {\n            push(relationshipsBySchema, target.constructor.name, Object.assign({}, meta, { [property]: key }));\n        }\n        else {\n            push(relationshipsBySchema, target.constructor.name, meta);\n        }\n    }\n    // Reflect.defineProperty(target, key, {\n    //   get: () => {\n    //     return this[key];\n    //   },\n    //   set: (value: any) => {\n    //     this[key] = value;\n    //   },\n    //   enumerable: true,\n    //   configurable: true\n    // });\n};\n/** lookup meta data for schema properties */\nfunction propertyMeta(context) {\n    return (prop) => Reflect.getMetadata(prop, context);\n}\n/**\n * Give all properties from schema and base schema\n *\n * @param target the schema object which is being looked up\n */\nfunction getProperties(target) {\n    return [\n        ...propertiesBySchema[target.constructor.name],\n        ...propertiesBySchema.BaseSchema.map(s => (Object.assign({}, s, { isBaseSchema: true })))\n    ];\n}\nexports.getProperties = getProperties;\nfunction getRelationships(target) {\n    return relationshipsBySchema[target.constructor.name];\n}\nexports.getRelationships = getRelationships;\nfunction getPushKeys(target) {\n    const props = getProperties(target);\n    return props.filter(p => p.pushKey).map(p => p.property);\n}\nexports.getPushKeys = getPushKeys;\n//# sourceMappingURL=decorator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"reflect-metadata\");\nconst decorator_1 = require(\"./decorator\");\nfunction hasMany(schemaClass) {\n    return decorator_1.propertyDecorator({\n        isRelationship: true,\n        isProperty: false,\n        relType: 'hasMany'\n    }, 'property');\n}\nexports.hasMany = hasMany;\nfunction ownedBy(schemaClass) {\n    return decorator_1.propertyDecorator({\n        isRelationship: true,\n        isProperty: false,\n        relType: 'ownedBy'\n    }, 'property');\n}\nexports.ownedBy = ownedBy;\nfunction inverse(inverseProperty) {\n    return decorator_1.propertyDecorator({ inverseProperty });\n}\nexports.inverse = inverse;\n//# sourceMappingURL=relationship.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"reflect-metadata\");\nconst decorator_1 = require(\"./decorator\");\n/** lookup meta data for schema properties */\nfunction propertyMeta(context) {\n    return (prop) => Reflect.getMetadata(prop, context);\n}\nfunction schema(options) {\n    return (target) => {\n        const original = target;\n        // new constructor\n        const f = function (...args) {\n            const meta = options;\n            const obj = Reflect.construct(original, args);\n            Reflect.defineProperty(obj, \"META\", {\n                get() {\n                    return Object.assign({}, options, { property: propertyMeta(obj) }, { properties: decorator_1.getProperties(obj) }, { relationships: decorator_1.getRelationships(obj) }, { pushKeys: decorator_1.getPushKeys(obj) }, { audit: options.audit ? options.audit : false });\n                },\n                set() {\n                    throw new Error(\"The meta property can only be set with the @schema decorator!\");\n                },\n                configurable: false,\n                enumerable: false\n            });\n            return obj;\n        };\n        // copy prototype so intanceof operator still works\n        f.prototype = original.prototype;\n        // return new constructor (will override original)\n        return f;\n    };\n}\nexports.schema = schema;\n//# sourceMappingURL=schema.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst property_1 = require(\"./decorators/property\");\nvar RelationshipPolicy;\n(function (RelationshipPolicy) {\n    RelationshipPolicy[\"keys\"] = \"keys\";\n    RelationshipPolicy[\"lazy\"] = \"lazy\";\n    RelationshipPolicy[\"inline\"] = \"inline\";\n})(RelationshipPolicy = exports.RelationshipPolicy || (exports.RelationshipPolicy = {}));\nvar RelationshipCardinality;\n(function (RelationshipCardinality) {\n    RelationshipCardinality[\"hasMany\"] = \"hasMany\";\n    RelationshipCardinality[\"belongsTo\"] = \"belongsTo\";\n})(RelationshipCardinality = exports.RelationshipCardinality || (exports.RelationshipCardinality = {}));\nclass BaseSchema {\n    toString() {\n        const obj = {};\n        this.META.properties.map(p => {\n            obj[p.property] = this[p.property];\n        });\n        return JSON.stringify(obj);\n    }\n}\n__decorate([\n    property_1.property,\n    __metadata(\"design:type\", String)\n], BaseSchema.prototype, \"id\", void 0);\n__decorate([\n    property_1.property,\n    __metadata(\"design:type\", Number)\n], BaseSchema.prototype, \"lastUpdated\", void 0);\n__decorate([\n    property_1.property,\n    __metadata(\"design:type\", Number)\n], BaseSchema.prototype, \"createdAt\", void 0);\nexports.BaseSchema = BaseSchema;\n//# sourceMappingURL=base-schema.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common_types_1 = require(\"common-types\");\nconst model_1 = require(\"./model\");\nconst firebase_key_1 = require(\"firebase-key\");\nclass Record {\n    constructor(_model, options = {}) {\n        this._model = _model;\n        this._existsOnDB = false;\n        this._writeOperations = [];\n        this._data = new _model.schemaClass();\n    }\n    static create(schema, options = {}) {\n        const model = model_1.default.create(schema, options);\n        const record = new Record(model, options);\n        return record;\n    }\n    static add(schema, newRecord, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // const r = new Record(schema, options);\n            const r = Record.create(schema, options);\n            yield r.initialize(newRecord);\n            return r;\n        });\n    }\n    static get(schema, id, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const record = Record.create(schema, options);\n            yield record.load(id);\n            return record;\n        });\n    }\n    get data() {\n        return this._data;\n    }\n    get isDirty() {\n        return this._writeOperations.length > 0 ? true : false;\n    }\n    get META() {\n        return this._model.schema.META;\n    }\n    get db() {\n        return this._model.db;\n    }\n    get pluralName() {\n        return this._model.pluralName;\n    }\n    get pushKeys() {\n        return this._model.schema.META.pushKeys;\n    }\n    /**\n     * returns the fully qualified name in the database to this record;\n     * this of course includes the record id so if that's not set yet calling\n     * this getter will result in an error\n     */\n    get dbPath() {\n        if (!this.data.id) {\n            throw common_types_1.createError(\"record/invalid-path\", `Invalid Record Path: you can not ask for the dbPath before setting an \"id\" property.`);\n        }\n        return [this.data.META.dbOffset, this.pluralName, this.data.id].join(\"/\");\n    }\n    get modelName() {\n        return this.data.constructor.name.toLowerCase();\n    }\n    /** The Record's primary key */\n    get id() {\n        return this.data.id;\n    }\n    set id(val) {\n        if (this.data.id) {\n            const e = new Error(`You may not re-set the ID of a record [ ${this.data.id} → ${val} ].`);\n            e.name = \"NotAllowed\";\n            throw e;\n        }\n        this._data.id = val;\n    }\n    /**\n     * returns the record's database offset without including the ID of the record;\n     * among other things this can be useful prior to establishing an ID for a record\n     */\n    get dbOffset() {\n        return this.data.META.dbOffset;\n    }\n    /**\n     * returns the record's location in the frontend state management framework;\n     * depends on appropriate configuration of model to be accurate.\n     */\n    get localPath() {\n        if (!this.data.id) {\n            throw new Error('Invalid Path: you can not ask for the dbPath before setting an \"id\" property.');\n        }\n        return [this.data.META.localOffset, this.pluralName, this.data.id].join(\"/\");\n    }\n    /**\n     * Allows an empty Record to be initialized to a known state.\n     * This is not intended to allow for mass property manipulation other\n     * than at time of initialization\n     *\n     * @param data the initial state you want to start with\n     */\n    initialize(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            Object.keys(data).map(key => {\n                this._data[key] = data[key];\n            });\n            const relationships = this.META.relationships;\n            const ownedByRels = (relationships || [])\n                .filter(r => r.relType === \"ownedBy\")\n                .map(r => r.property);\n            const hasManyRels = (relationships || [])\n                .filter(r => r.relType === \"hasMany\")\n                .map(r => r.property);\n            // default hasMany to empty hash\n            hasManyRels.map((p) => {\n                if (!this._data[p]) {\n                    this._data[p] = {};\n                }\n            });\n            const now = new Date().getTime();\n            if (!this._data.lastUpdated) {\n                this._data.lastUpdated = now;\n            }\n            if (!this._data.createdAt) {\n                this._data.createdAt = now;\n            }\n            if (!this.id) {\n                this._save();\n            }\n        });\n    }\n    get existsOnDB() {\n        return this.data && this.data.id ? true : false;\n    }\n    /**\n     * Load data from a record in database\n     */\n    load(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.db) {\n                const e = new Error(`The attempt to load data into a Record requires that the DB property be initialized first!`);\n                e.name = \"NoDatabase\";\n                throw e;\n            }\n            this._data.id = id;\n            const data = yield this.db.getRecord(this.dbPath);\n            if (data && data.id) {\n                this.initialize(data);\n            }\n            else {\n                throw new Error(`Unknown Key: the key \"${id}\" was not found in Firebase at \"${this.dbPath}\".`);\n            }\n            return this;\n        });\n    }\n    update(hash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.data.id || !this._existsOnDB) {\n                throw new Error(`Invalid Operation: you can not update a record which doesn't have an \"id\" or which has never been saved to the database`);\n            }\n            return this.db.update(this.dbPath, hash);\n        });\n    }\n    /**\n     * Pushes new values onto properties on the record\n     * which have been stated to be a \"pushKey\"\n     */\n    pushKey(property, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.META.pushKeys.indexOf(property) === -1) {\n                throw common_types_1.createError(\"invalid-operation/not-pushkey\", `Invalid Operation: you can not push to property \"${property}\" as it has not been declared a pushKey property in the schema`);\n            }\n            if (!this.existsOnDB) {\n                throw common_types_1.createError(\"invalid-operation/not-on-db\", `Invalid Operation: you can not push to property \"${property}\" before saving the record to the database`);\n            }\n            const key = firebase_key_1.key();\n            const currentState = this.get(property) || {};\n            const newState = Object.assign({}, currentState, { [key]: value });\n            // set state locally\n            this.set(property, newState);\n            // push updates to db\n            const write = this.db.multiPathSet(`${this.dbPath}/`);\n            write.add({ path: `lastUpdated`, value: new Date().getTime() });\n            write.add({ path: `${property}/${key}`, value });\n            try {\n                yield write.execute();\n            }\n            catch (e) {\n                throw common_types_1.createError(\"multi-path/write-error\", \"\", e);\n            }\n            return key;\n        });\n    }\n    /**\n     * Adds another fk to a hasMany relationship\n     *\n     * @param property the property which is acting as a foreign key (array)\n     * @param ref reference to ID of related entity\n     * @param optionalValue the default behaviour is to add the value TRUE but you can optionally add some additional piece of information here instead.\n     */\n    addHasMany(property, ref, optionalValue = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.META.property(property).relType !== \"hasMany\") {\n                const e = new Error(`The property \"${property}\" does NOT have a \"hasMany\" relationship on ${this.modelName}`);\n                e.name = \"InvalidRelationship\";\n                throw e;\n            }\n            if (typeof this.data[property] === \"object\" &&\n                this.data[property][ref]) {\n                console.warn(`The fk of \"${ref}\" already exists in \"${this.modelName}.${property}\"!`);\n                return;\n            }\n            yield this.db\n                .multiPathSet(this.dbPath)\n                .add({ path: `${property}/${ref}/`, value: optionalValue })\n                .add({ path: \"lastUpdated\", value: new Date().getTime() })\n                .execute();\n        });\n    }\n    /**\n     * Changes the local state of a property on the record\n     *\n     * @param prop the property on the record to be changed\n     * @param value the new value to set to\n     */\n    set(prop, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: add interaction points for client-side state management; goal\n            // is to have local state changed immediately but with meta data to indicate\n            // that we're waiting for backend confirmation.\n            this._data[prop] = value;\n            yield this.db\n                .multiPathSet(this.dbPath)\n                .add({ path: `${prop}/`, value })\n                .add({ path: \"lastUpdated\", value: new Date().getTime() })\n                .execute();\n            return;\n        });\n    }\n    /**\n     * get a property value from the record\n     *\n     * @param prop the property being retrieved\n     */\n    get(prop) {\n        return this.data[prop];\n    }\n    toString() {\n        return `Record::${this.modelName}@${this.id || \"undefined\"}`;\n    }\n    toJSON() {\n        return {\n            dbPath: this.dbPath,\n            modelName: this.modelName,\n            pluralName: this.pluralName,\n            key: this.id,\n            localPath: this.localPath,\n            data: this.data.toString()\n        };\n    }\n    _save() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.id) {\n                const e = new Error(`Saving after ID is set is not allowed [ ${this.id} ]`);\n                e.name = \"InvalidSave\";\n                throw e;\n            }\n            this.id = firebase_key_1.key();\n            yield this.db.set(this.dbPath, this.data);\n            return this;\n        });\n    }\n}\nexports.Record = Record;\n//# sourceMappingURL=record.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst index_1 = require(\"./index\");\nconst serialized_query_1 = require(\"serialized-query\");\nconst model_1 = require(\"./model\");\nclass List {\n    constructor(_model, _data = []) {\n        this._model = _model;\n        this._data = _data;\n    }\n    static create(schema, options = {}) {\n        const model = model_1.default.create(schema, options);\n        return new List(model);\n    }\n    /**\n     * Creates a List<T> which is populated with the passed in query\n     *\n     * @param schema the schema type\n     * @param query the serialized query; note that this LIST will override the path of the query\n     * @param options model options\n     */\n    static from(schema, query, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = model_1.default.create(schema, options);\n            query.setPath(model.dbPath);\n            const list = List.create(schema, options);\n            yield list.load(query);\n            return list;\n        });\n    }\n    /**\n     * Loads all the records of a given schema-type ordered by lastUpdated\n     *\n     * @param schema the schema type\n     * @param options model options\n     */\n    static all(schema, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const query = new serialized_query_1.SerializedQuery().orderByChild(\"lastUpdated\");\n            const list = yield List.from(schema, query, options);\n            return list;\n        });\n    }\n    /**\n     * Loads the first X records of the Schema type where\n     * ordering is provided by the \"createdAt\" property\n     *\n     * @param schema the schema type\n     * @param howMany the number of records to bring back\n     * @param options model options\n     */\n    static first(schema, howMany, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const query = new serialized_query_1.SerializedQuery().orderByChild(\"createdAt\").limitToLast(howMany);\n            const list = yield List.from(schema, query, options);\n            return list;\n        });\n    }\n    static recent(schema, howMany, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const query = new serialized_query_1.SerializedQuery().orderByChild(\"lastUpdated\").limitToFirst(howMany);\n            const list = yield List.from(schema, query, options);\n            return list;\n        });\n    }\n    static inactive(schema, howMany, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const query = new serialized_query_1.SerializedQuery().orderByChild(\"lastUpdated\").limitToLast(howMany);\n            const list = yield List.from(schema, query, options);\n            return list;\n        });\n    }\n    static last(schema, howMany, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const query = new serialized_query_1.SerializedQuery().orderByChild(\"createdAt\").limitToFirst(howMany);\n            const list = yield List.from(schema, query, options);\n            return list;\n        });\n    }\n    static where(schema, property, value, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let operation = \"=\";\n            let val = value;\n            if (Array.isArray(value)) {\n                val = value[1];\n                operation = value[0];\n            }\n            const query = new serialized_query_1.SerializedQuery().orderByChild(property).where(operation, val);\n            const list = yield List.from(schema, query, options);\n            return list;\n        });\n    }\n    get length() {\n        return this._data.length;\n    }\n    get db() {\n        return this._model.db;\n    }\n    get modelName() {\n        return this._model.modelName;\n    }\n    get pluralName() {\n        return this._model.pluralName;\n    }\n    get dbPath() {\n        return [this.meta.dbOffset, this.pluralName].join(\"/\");\n    }\n    get localPath() {\n        return [this.meta.localOffset, this.pluralName].join(\"/\");\n    }\n    get meta() {\n        return this._model.schema.META;\n    }\n    /** Returns another List with data filtered down by passed in filter function */\n    filter(f) {\n        return new List(this._model, this._data.filter(f));\n    }\n    /** Returns another List with data filtered down by passed in filter function */\n    find(f) {\n        const filtered = this._data.filter(f);\n        return filtered.length > 0 ? index_1.Record.add(this._model.schemaClass, filtered[0]) : null;\n    }\n    /** Maps the data in the list to a plain JS object. Note: maintaining a List container isn't practical as the transformed data structure might not be a defined schema type */\n    map(f) {\n        return this._data.map(f);\n    }\n    get data() {\n        return this._data;\n    }\n    /**\n     * Returns the specified record Record object\n     *\n     * @param id the unique ID which is being looked for\n     */\n    get(id) {\n        const find = this.filter(f => f.id === id);\n        if (find.length === 0) {\n            const e = new Error(`Could not find \"${id}\" in list of ${this._model.pluralName}`);\n            e.name = \"NotFound\";\n            throw e;\n        }\n        const r = new index_1.Record(this._model);\n        r.initialize(find.data[0]);\n        return r;\n    }\n    /**\n     * Returns the specified record Model object\n     *\n     * @param id the unique ID which is being looked for\n     */\n    getModel(id) {\n        const record = this.get(id);\n        return record.data;\n    }\n    load(pathOrQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.db) {\n                const e = new Error(`The attempt to load data into a List requires that the DB property be initialized first!`);\n                e.name = \"NoDatabase\";\n                throw e;\n            }\n            this._data = yield this.db.getList(pathOrQuery);\n            return this;\n        });\n    }\n}\nexports.List = List;\n//# sourceMappingURL=list.js.map","import { alphabet } from \"./key-alphabet\";\r\nexport function milliseconds(key) {\r\n    var result = 0;\r\n    for (var i = 0; i < 8; ++i) {\r\n        var index = alphabet.indexOf(key.charAt(i));\r\n        if (index === -1) {\r\n            throw new Error(\"Unexpected character '\" + key.charAt(i) + \"'.\");\r\n        }\r\n        result = (result * 64) + index;\r\n    }\r\n    return result;\r\n}\r\n","export function repeat(text, count) {\r\n    var result = \"\";\r\n    if (typeof text.repeat === \"function\") {\r\n        result = text.repeat(count);\r\n    }\r\n    else {\r\n        if (count > 0) {\r\n            while (count > 1) {\r\n                if (count & 1) {\r\n                    result += text;\r\n                }\r\n                count >>= 1;\r\n                text += text;\r\n            }\r\n            result = result + text;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n","import { alphabet } from \"./key-alphabet\";\r\nimport { randomString } from \"./text-random-string\";\r\nvar lastTimestamp = 0;\r\nexport function key(timestamp, as) {\r\n    if (timestamp === undefined) {\r\n        timestamp = Date.now();\r\n        if (timestamp <= lastTimestamp) {\r\n            timestamp = lastTimestamp + 1;\r\n        }\r\n        lastTimestamp = timestamp;\r\n    }\r\n    if (timestamp instanceof Date) {\r\n        timestamp = timestamp.getTime();\r\n    }\r\n    var result = new Array(9);\r\n    for (var i = 7; i >= 0; --i) {\r\n        result[i] = alphabet.charAt(timestamp % 64);\r\n        timestamp = Math.floor(timestamp / 64);\r\n    }\r\n    if (timestamp !== 0) {\r\n        throw new Error(\"Unexpected timestamp.\");\r\n    }\r\n    switch (as) {\r\n        case \"max\":\r\n            result[8] = \"zzzzzzzzzzzz\";\r\n            break;\r\n        case \"min\":\r\n            result[8] = \"------------\";\r\n            break;\r\n        default:\r\n            result[8] = randomString(alphabet, 12);\r\n    }\r\n    return result.join(\"\");\r\n}\r\nexport function resetLastTimestamp() {\r\n    lastTimestamp = 0;\r\n}\r\n","import { milliseconds } from \"./key-milliseconds\";\r\nexport function date(key) {\r\n    return new Date(milliseconds(key));\r\n}\r\n","export function decode(component) {\r\n    return component.replace(/!([0-9a-f]{2})/gi, function (match, code) { return String.fromCharCode(parseInt(code, 16)); });\r\n}\r\n","import { alphabet } from \"./key-alphabet\";\r\nexport function decodeLexicographic(key) {\r\n    var value = 0;\r\n    var lengthChar = key.charAt(0);\r\n    if (lengthChar > \"_\") {\r\n        for (var k = 1; k < key.length; k++) {\r\n            value *= alphabet.length;\r\n            value += alphabet.indexOf(key.charAt(k));\r\n        }\r\n    }\r\n    else {\r\n        for (var k = 1; k < key.length; k++) {\r\n            value *= alphabet.length;\r\n            value += alphabet.length - 1 - alphabet.indexOf(key.charAt(k));\r\n        }\r\n        value = -value;\r\n    }\r\n    return value;\r\n}\r\n","import { alphabet } from \"./key-alphabet\";\r\nimport { repeat } from \"./text-repeat\";\r\nexport function decrement(key) {\r\n    return key.replace(/[^-]-*$/, function (match) {\r\n        var index = alphabet.indexOf(match.charAt(0));\r\n        if (index === -1) {\r\n            throw new Error(\"Unexpected character '\" + match.charAt(0) + \"'.\");\r\n        }\r\n        return alphabet.charAt(index - 1) + repeat(\"z\", match.length - 1);\r\n    });\r\n}\r\n","export function encode(component) {\r\n    return component.replace(/[\\/\\.\\$\\[\\]#!]/g, function (match) { return \"!\" + match.charCodeAt(0).toString(16).toUpperCase(); });\r\n}\r\n","import { alphabet } from \"./key-alphabet\";\r\nexport function encodeLexicographic(value) {\r\n    var result = \"\";\r\n    if (value === 0) {\r\n        result = \"a-\";\r\n    }\r\n    else if (value > 0) {\r\n        while (value > 0) {\r\n            var digit = (value % alphabet.length);\r\n            result = alphabet.charAt(digit) + result;\r\n            value -= digit;\r\n            value /= alphabet.length;\r\n        }\r\n        var prefix = alphabet.charAt(result.length + 37);\r\n        result = prefix + result;\r\n    }\r\n    else {\r\n        value = -value;\r\n        while (value > 0) {\r\n            var digit = (value % alphabet.length);\r\n            result = alphabet.charAt(alphabet.length - 1 - digit) + result;\r\n            value -= digit;\r\n            value /= alphabet.length;\r\n        }\r\n        var prefix = alphabet.charAt(37 - result.length);\r\n        result = prefix + result;\r\n    }\r\n    return result;\r\n}\r\n","import { alphabet } from \"./key-alphabet\";\r\nimport { repeat } from \"./text-repeat\";\r\nexport function increment(key) {\r\n    return key.replace(/[^z]z*$/, function (match) {\r\n        var index = alphabet.indexOf(match.charAt(0));\r\n        if (index === -1) {\r\n            throw new Error(\"Unexpected character '\" + match.charAt(0) + \"'.\");\r\n        }\r\n        return alphabet.charAt(index + 1) + repeat(\"-\", match.length - 1);\r\n    });\r\n}\r\n","export function randomString(alphabet, length) {\r\n    var buffer = [];\r\n    length = length | 0;\r\n    while (length) {\r\n        var r = (Math.random() * alphabet.length) | 0;\r\n        buffer.push(alphabet.charAt(r));\r\n        length -= 1;\r\n    }\r\n    return buffer.join(\"\");\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Default Export\nvar model_1 = require(\"./model\");\nexports.default = model_1.default;\n// Named Exports\nvar property_1 = require(\"./decorators/property\");\nexports.property = property_1.property;\nexports.pushKey = property_1.pushKey;\nexports.constrainedProperty = property_1.constrainedProperty;\nexports.constrain = property_1.constrain;\nexports.min = property_1.min;\nexports.max = property_1.max;\nexports.length = property_1.length;\nexports.desc = property_1.desc;\nvar relationship_1 = require(\"./decorators/relationship\");\nexports.hasMany = relationship_1.hasMany;\nexports.ownedBy = relationship_1.ownedBy;\nexports.inverse = relationship_1.inverse;\nvar schema_1 = require(\"./decorators/schema\");\nexports.schema = schema_1.schema;\nvar model_2 = require(\"./model\");\nexports.Model = model_2.default;\nvar base_schema_1 = require(\"./base-schema\");\nexports.BaseSchema = base_schema_1.BaseSchema;\nexports.RelationshipPolicy = base_schema_1.RelationshipPolicy;\nexports.RelationshipCardinality = base_schema_1.RelationshipCardinality;\nvar record_1 = require(\"./record\");\nexports.Record = record_1.Record;\nvar list_1 = require(\"./list\");\nexports.List = list_1.List;\nvar firebase_key_1 = require(\"firebase-key\");\nexports.fbKey = firebase_key_1.key;\n//# sourceMappingURL=index.js.map"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","next","e","rejected","step","result","done","then","apply","Object","defineProperty","exports","common_types_1","require","VerboseError_1","index_1","pluralize","camelCase","serialized_query_1","util_1","firebase_key_1","baseLogger","message","console","log","modelName","_key","warn","process","env","STAGE","AWS_STAGE","ENV","error","Model","_schemaClass","db","logger","_mockGenerator","_this2","_bespokeMockGenerator","assign","_defaultGenerator","h","Date","faker","date","past","toISOString","_db","defaultDb","_schema","this","schemaClass","id","Record","get","query","list","List","load","dbPath","prop","_findBuilder","results","getList","length","first","pop","createError","pluralName","JSON","stringify","record","auditInfo","now","keys","crud","slashNotation","newRecord","key","updates","returnValue","Error","name","getValue","match","undefined","filter","since","last","path","auditBase","SerializedQuery","startAt","orderByChild","limitToLast","when","info","push","op","isAuditable","META","audit","set","update","_this3","ref","remove","VerboseError","child","singular","operation","Array","limitToFirst","equalTo","endAt","quantity","override","mock","queueSchema","generate","constructor","_pluralName","plural","cb","dbOffset","join","localOffset","relationships","properties","pushKeys","schema","options","default","decorator_1","constrainedProperty","propertyDecorator","constrain","desc","min","max","property","pushKey","Reflect","factory","root","global","self","Function","exporter","makeExporter","target","previous","configurable","writable","hasOwn","prototype","hasOwnProperty","supportsSymbol","Symbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","iterator","supportsCreate","create","supportsProto","__proto__","downLevel","HashMap","MakeDictionary","has","map","call","functionPrototype","getPrototypeOf","usePolyfill","_Map","Map","entries","cacheSentinel","arraySentinel","MapIterator","values","selector","_index","_keys","_values","_selector","index","throw","return","_cacheKey","_cacheIndex","enumerable","_find","delete","size","i","clear","getKey","getEntry","insert","indexOf","_","CreateMapPolyfill","_Set","Set","_map","add","Metadata","WeakMap","UUID_SIZE","rootKey","CreateUniqueKey","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","buffer","Math","random","data","Uint8Array","crypto","getRandomValues","msCrypto","GenRandomBytes","offset","byte","toString","toLowerCase","CreateWeakMapPolyfill","GetOrCreateMetadataMap","O","Create","targetMetadata","IsUndefined","metadataMap","OrdinaryHasOwnMetadata","MetadataKey","OrdinaryGetOwnMetadata","OrdinaryDefineOwnMetadata","MetadataValue","OrdinaryOwnMetadataKeys","keysObj","obj","method","GetMethod","IsCallable","TypeError","IsObject","GetIterator","k","IteratorStep","nextValue","IteratorClose","Type","x","IsNull","ToPrimitive","input","PreferredType","hint","exoticToPrim","toString_1","valueOf","toString_2","OrdinaryToPrimitive","ToPropertyKey","argument","ToString","IsArray","isArray","IsConstructor","V","func","f","OrdinaryGetPrototypeOf","proto","prototypeProto","__","decorators","propertyKey","attributes","decorator","decorated","DecorateConstructor","descriptor","DecorateProperty","metadataKey","metadataValue","IsPropertyKey","OrdinaryHasMetadata","parent","OrdinaryGetMetadata","OrdinaryMetadataKeys","ownKeys","parentKeys","_i","ownKeys_1","hasKey","_a","parentKeys_1","propertiesBySchema","relationshipsBySchema","getProperties","BaseSchema","s","nameValuePairs","reflect","getMetadata","meta","defineMetadata","isProperty","isRelationship","getRelationships","getPushKeys","p","inverseProperty","original","args","construct","context","__decorate","d","c","arguments","r","getOwnPropertyDescriptor","decorate","__metadata","v","metadata","property_1","RelationshipPolicy","RelationshipCardinality","_this","String","Number","model_1","_model","_existsOnDB","_writeOperations","_data","relType","getTime","lastUpdated","createdAt","_save","getRecord","initialize","hash","existsOnDB","currentState","newState","write","multiPathSet","execute","optionalValue","_typeof","localPath","val","filtered","find","pathOrQuery","model","setPath","from","howMany","where","milliseconds","alphabet","charAt","repeat","text","count","lastTimestamp","component","replace","code","fromCharCode","parseInt","charCodeAt","toUpperCase","digit","timestamp","as","floor","randomString","relationship_1","hasMany","ownedBy","inverse","schema_1","model_2","base_schema_1","record_1","list_1"],"mappings":"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"}